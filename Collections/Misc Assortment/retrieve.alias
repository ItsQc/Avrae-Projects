embed <drac2>
prefix = "Thrown "
argList = &ARGS&
retrievalSuccess = False
isMatch = False
out = f' -title "{character().name} failed to retrieve their weapons!"'
error = "Unknown"
maxKeywords = ["max", "MAX", "Max", "all", "All", "ALL"]
retrieveAll = False
if len(argList) > 0:
    if (argList[0].isdecimal()) or (argList[0] in maxKeywords):
        ch = character()
        if len(argList) > 1:
            text = ' '.join(argList[1:])
            text = text.lower().strip('"').strip("'")
            for counter in character().consumables:
                ccWeapon = counter.name.replace(prefix, '').lower()
                if (ccWeapon.find(text) != -1) and (prefix in counter.name):
                    isMatch = True
                    ccName = counter.name
                    break
        else:
            thrownCounters = 0
            for counter in character().consumables:
                if (len(counter.name.strip(prefix)) > 0) and (prefix in counter.name):
                    ccName = counter.name
                    thrownCounters += 1
            if thrownCounters == 1:
                isMatch = True
            elif thrownCounters > 1:
                error = f"You did not specify which of your {thrownCounters} thrown weapon counters to retrieve!"
            else:
                error = "You do not yet have any thrown weapon counters"

        if isMatch:
            unretrieved = ch.get_cc(ccName)
            if argList[0] in maxKeywords:
                amount = unretrieved
            else:
                amount = int(argList[0])
            if amount <= unretrieved:
                out = f' -title "{ch.name} is Retrieving their Thrown Weapons!" -desc "__**{ccName.strip(prefix)}**__\nRetrieved: **{amount}**\nLost: **{ch.set_cc(ccName, ch.get_cc(ccName) - amount)}**"'
                ch.set_cc(ccName, 0)
                retrievalSuccess = True

            else:
                error = f"The amount to retrieve ({amount}) exceeds how many ({ccName.strip(prefix)}) you have thrown ({unretrieved})"
        else:
            error = f"No custom counters matching 'Thrown {text}'"
    else:
        error = "Amount given was not a number!"
else:
    error = "No arguments given!"

if not retrievalSuccess:
    out = f' -desc "{error}"'

return out + f' -f "``{ctx.prefix}help {ctx.alias}``"'
</drac2>
-thumb <image>
-color <color>